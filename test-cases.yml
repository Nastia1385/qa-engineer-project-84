---
- summary: |
    Добавление товара в пустую корзину
  requirement: >
    Пользователь должен иметь возможность добавлять товары в корзину и
    просматривать содержимое корзины
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Любой товар
  steps:
    - выбрать товар
    - Нажать кнопку «В корзину» в карточке товара
  expected-result: |
    Пользователь должен увидеть, что рядом с кнопкой "Корзина" в правом верхнем углу отображается количество выбранных товаров.

---
- summary: >
    Проверка перехода со страницы каталога в корзину для просмотра
    выбранных товаров
  requirement: >
    Пользователь должен иметь возможность добавлять товары в корзину и
    просматривать содержимое корзины
  prerequisites: |
    Открыта  страница каталога, в корзину ранее были добавлены товары
  test-data: |
    Нет данных
  steps: – нажать на кнопку «Корзина»
  expected-result: |
    Пользователь должен перейти в корзину и увидеть товары , которые он выбрал

---
- summary: |
    Удаление товара из корзины
  requirement: |
    На странице корзины пользователь может удалить товар из корзины
  prerequisites: |
    Открыта страница корзины, в которую был добавлен товар
  test-data: |
    - Количество товара = 1, 
  steps: – нажать на кнопку «Удалить»
  expected-result: |
    В корзине пользователь должен увидеть, что товар удален

---
- summary: >
    Проверка просмотра данных о товаре на странице товара: название,
    изображение товара, рейтинг, описание товара, цена с учетом скидки и без.
  requirement: >
    Пользователь должен иметь возможность просматривать товары и
    просматривать подробную информацию о товаре
  prerequisites: |
    Открыта страница любого  товара из каталога
  test-data: |
    Тестовых данных нет.
  steps: null
  – проверяем наличие информации: название, изображение товара, рейтинг, описание
    товара, цена с учетом скидки и без
  expected-result: >
    Пользователь должен увидеть следующую информацию о товаре –
    название, изображение товара, рейтинг, описание товара, цена с учетом скидки
    и без

---
- summary: |
    Проверка поиска по названию товара
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: |
    Открыта страница каталога
  test-data: |
    Название товара = OPPO
  steps: – Вводим Название товара в строке "поиск"
  expected-result: |
    Пользователь должен увидеть подходящие под название товары

---
- summary: |
    Поиск поиска товара по ключевому слову с цифровым значением
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Ключевое слово = 19
  steps: – Вводим ключевое слово в строке поиск
  expected-result: >
    Пользователь должен увидеть товары подходящие под поиск по
    данному ключевому слову 

---
- summary: |
    Проверка поиска товара по категории на первой странице каталога
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Любая категория из списка
  steps:
    - Открыть список Category
    - выбрать категорию
  expected-result: |
    Пользователь должен увидеть товары подходящие выбранной им категории 

---
- summary: >
    Проверка поиска товара по категории на странице каталога, отличной от
    первой страницы
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Любая категория с первой страницы каталога
  steps:
    - Открыть список "Категория" на первой странице каталога
    - Запомнить любую категорию с первой страницы каталога
    - Перейти по кнопки "Следующая" на вторую страницу каталога
    - Открыть список "Категория" на второй странице каталога
    - Выбрать категорию которую мы виидели на первой странице каталога
  expected-result: |
    Пользователь должен увидеть товары подходящие выбранной категории 

---
- summary: |
    Проверка поиска по фильтру «бренд»
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Бренд = Apple, Бренд = YIOSI, Бренд = Car Aux
  steps: – Выбрать из списка бренд Apple - Выбрать из списка бренд YIOSI - Выбрать
    из списка бренд Car Aux
  expected-result: |
    Пользователь должен увидеть товары по выбранным брендам

---
- summary: |
    Проверка поиска товара по фильтру «в наличии»
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Открыта любая страница каталога, фильтр включен 
  test-data: |
    Нет данных
  steps: – Нажать на фильтр и отключить его
  expected-result: >
    Пользователь должен увидеть товары, которые есть в наличии, и
    которых нет в наличии.

---
- summary: |
    Проверка поиска товара по фильтру цена
     requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Открыта любая страница каталога
  test-data: |
    Цена от = 253 цена до = не указана
      steps:
    – Вводим цену от
    - Нажимаем кнопку "применить"
  expected-result: |
    Пользователь должен увидеть все товары, согласно выставленному фильтру

---
- summary: |
    Проверка ввода отрицательных чисел в поле "Цена"
     requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Открыта любая страница каталога
  test-data: |
    Цена от = -253 цена до = не указана
      steps:
    – Вводим цену от
  expected-result: |
    Пользователь должен увидеть сообщение, что поле цена заполнено неверно

---
- summary: |
    Проверка ввода дробных чисел в поле  "цена" 
     requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Открыта любая страница каталога. Количество знаков после запятой более двух.
  test-data: |
    Цена от = 10,154 цена до = 15.458
      steps:
    – Вводим цену от
    – Вводим цену до
  expected-result: |
    Пользователь должен увидеть сообщение, что поле цена заполнено неверно

---
- summary: |
    Проверка поиска товара по цене со скидкой
     requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Открыта любая страница каталога
  test-data: |
    Цена от = 11 цена до = 12
      steps:
    – Вводим цену от
    – Вводим цену до
    - проверить результат поиска с данными каталога
  expected-result: |
    Пользователь должен увидеть ВСЕ товары, согласно выставленному фильтру 

---
- summary: |
    Проверка перехода из "корзины" в каталог для продолжения покупок
  requirement: На странице корзины пользователь может удалить товар из корзины,
    продолжить выбирать товары в каталоге, оформить заказ с переходом на
    страницу оплаты
  prerequisites: |
    Открыта страница корзины. В корзине уже добавлен товар
  test-data: |
    нет данных
  steps: – нажать кнопку «Продолжить покупки»
  expected-result: |
    Пользователь должен вернутся в каталог товаров

---
- summary: |
    Проверка перехода на страницу оплаты при оформлении заказа
  requirement: >
    На странице корзины пользователь может удалить товар из корзины,
    продолжить выбирать товары в каталоге, оформить заказ с переходом на
    страницу оплаты
  prerequisites: |
    Открыта страница корзины. В корзине уже добавлен товар 
  test-data: |
    нет данных    
  steps: – нажать кнопку «оформить заказ»
  expected-result: |
    Пользователь должен перейти на форму оплаты

---
- summary: |
    Проверка оформления заказа через DevTools.
  requirement: >
    На странице корзины пользователь может удалить товар из корзины,
    продолжить выбирать товары в каталоге, оформить заказ с переходом на
    страницу оплаты
  prerequisites: |
    Открыта страница корзины. В корзине уже добавлен товар 
  test-data: |
    нет данных    
  steps:
    - Открыть DevTools вкладка Network – нажать кнопку «оформить заказ»
  expected-result: >
    Во    вкладке Network мы должны увидеть что операция прошла
    успешно и имеет статус 200  

---
- summary: |
    Проверка кроссбраузерности интернет магазина
  requirement: >
    Сайт должен быть протестирован на совместимость с последними
    версиями браузеров
  prerequisites: |
    Браузеры, используемые для проверки, должны быть установлены на компьютер.
  test-data: |
    Браузер Google Chrome
     Адрес сайта https://hexlet-products-store.vercel.app
  steps: – Открыть браузер – Ввести адрес сайта – Нажать «Поиск»
  expected-result: |
    Пользователь должен попасть на страницу магазина

---
- summary: |
    Проверка кроссбраузерности интернет магазина
  requirement: >
    Сайт должен быть протестирован на совместимость с последними
    версиями браузеров
  prerequisites: |
    Браузеры, используемые для проверки, должны быть установлены на компьютер.
  test-data: |
    Браузер Firefox
     Адрес сайта https://hexlet-products-store.vercel.app
  steps: – Открыть браузер – Ввести адрес сайта – Нажать «Поиск»
  expected-result: |
    Пользователь должен попасть на страницу магазина

---
- summary: |
    Проверка отображения информации при выборе русскоязычной версии сайта
  requirement: >
    Пользователь должен иметь возможность просматривать товары и
    просматривать подробную информацию о товаре
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    нет данных
  steps:
    - нажать на кнопку "Language"
    - выбрать русскоязычную версию сайта
  expected-result: >
    Пользователь должен увидеть все данные о товаре и всю навигацию
    на русском языке

---
- summary: |
    Переход с первой страницы на следующую
  requirement: >
    Пользователь может просматривать каталог товаров, фильтруя их и
    пользуясь постраничным выводом
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Нет данных
  steps:
    - вверху страницы каталога нажать кнопку "Следующая"
  expected-result: |
    Пользователь должен перейти на следующую страницу.

---
- summary: |
    Переход с первой страницы на предыдущую
  requirement: >
    Пользователь может просматривать каталог товаров, фильтруя их и
    пользуясь постраничным выводом
  prerequisites: |
    Открыта первая страница каталога
  test-data: |
    Нет данных
  steps:
    - вверху страницы каталога проверяем наличие кнопки "Предыдущая"
  expected-result: |
    Кнопки не должно быть, так как в ней нет смысла

---
- summary: |
    Переход с последней страницы каталога на предыдущую
  requirement: >
    Пользователь может просматривать каталог товаров, фильтруя их и
    пользуясь постраничным выводом
  prerequisites: |
    Открыта последняя страница каталога
  test-data: |
    Нет данных
  steps:
    - вверху страницы каталога нажать кнопку "Предыдущая"
  expected-result: |
    Пользователь должен перейти на предыдущую страницу.

---
- summary: |
    Переход с последней страницы на следующую
  requirement: >
    Пользователь может просматривать каталог товаров, фильтруя их и
    пользуясь постраничным выводом
  prerequisites: |
    Открыта последняя страница каталога
  test-data: |
    Нет данных
  steps:
    - вверху страницы каталога нажать кнопку "Следующая"
  expected-result: |
    Кнопки не должно быть, так как в ней нет смысла
---
- summary: |
    Проверка полной очистки корзины
  requirement: >
    На странице корзины пользователь может удалить товар из корзины
  prerequisites: |
    Открыта страница корзины в каталоге, в корзину добавлены товары
  test-data: |
    Нет данных
  steps:
    - нажать на кнопку "Очистить корзину"
  expected-result: |
    Пользователь должен увидеть что корзина пустая
